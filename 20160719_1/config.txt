// careful: the order matters!
// for bool write true or 1 or false or 0

// working directory (e.g.: kalman/): working_dir (if it is the current directory, don't write nothing, write: ./ )
./

// subdirectory where we have the data from the segmentation ("data_exp.txt" and "data_len.txt" ) and where will be the output: data_dir
20160719_1/
// input files from segmentation
// for each frame contains x and y positions of each rectangle, and angles of orientation (in radians modulo pi): positions_angles_data
data_exp.txt
// for each frame contains length and width of each rectangle: length_width_data
data_len.txt
// names of original pictures (we need them to compute vector fields to correct angles (we have them only modulo pi), and for visualization of the results): pictures_filename_tpl
%05d_Normalized.png
//img_%09d_01-BF0_000.tif

// defines the part of the images that we are using (has to be the same as in imageprocessing.cpp)
0 // subregion_x
0 // subregion_y
512 // dx
512 // dy

// to define which frames we want to use
0    // time_start
99  // time_stop
1    // time_step

10 // minimum width for a rectangle from the segmentation to be considered as a bacteria: width_min

0 // initial velocity: v_init
// initial error covariance matrices P
0.01 // initialNoise_x
0.01 // initialNoise_y
0.01 // initialNoise_vx
0.01 // initialNoise_vy

// is the velocity part of the observation model?
true

// (noise values from kalman_parameter.cpp)
5.5 // variance of position process noise: weight_q_pos
2.3 // variance of velocity process noise: weight_q_vel
10  // variance of position observation noise: weight_r_pos
3   // variance of velocity observation noise: weight_r_vel

0.O5 // proportion of the edge considered as edge (eg if edge=0.1 and L=10, we take a band of width 1 all around which is the edge): edge_region

// weight coefficients for energy function (used to do the assignment between predictions and observations)
0.25 // for angular displacement: angfactor
2 // threshold, value of energy cost function above means that cannot be the same particle: rating_threshold

5 // maximum number of multiple prediction: multiple_pred_threshold

// do we want to print indices next to bacteria (visualization.cpp): print_index
true
// do we plot covariance ellipses around bacteria (visualization.cpp): plot_cov
false

2 // for visualisation of the results, (1: use as input output of kalman.cpp, 2: use as input output of tracking.cpp): input_kind

